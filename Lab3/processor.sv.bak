module processor();

	instruction_handler(clk, reset, imm26, imm19, uncondBr, brTaken, instr);

	instruction_decoder(instruction, LT, ALU_Zero,
									UncondBr, BrTaken, ImmALUA, RegWrite, 
									RdToRdB, Imm12ALU, RegWData, ShiftToALUB, ShiftDir,
									ReadMem, MemWr, RdToRdA, ALUCntrl, FlagE,
									rd, rm, rn, imm26, imm19, imm12, imm9,
									shamt);
	
	regfile	r (.clk, .WriteRegister(rd), .RegWrite, .WriteData(), 
				   .ReadRegister1, .ReadRegister2(), .ReadData1(dA), .ReadData2(dB));
					
	sign_extender #(52) imm12_se (in, out);
	sign_extender #(55) imm9_se (in, out);
					
	alu(A, B, cntrl, result, negative, zero, overflow, carryout);
	
	flag_handler(clk, reset, en, zero_in, oflow_in, neg_in, cout_in,
						  zero, overflow, negative, carry_out);
endmodule